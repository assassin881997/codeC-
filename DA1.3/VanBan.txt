The purpose of a programming language is to help express ideas in code. In that, a programming
language performs two related tasks: it provides a vehicle for the programmer to specify actions to to
be executed by the machine, and it provides a set of concepts for the programmer to use when
thinking about what can be done. The first purpose ideally requires a language that is close to the
machine’’ so that all important aspects of a machine are handled simply and efficiently in a way
that is reasonably obvious to the programmer. The C language was primarily designed with this in
mind. The second purpose ideally requires a language that is close to the problem to be solved
so that the concepts of a solution can be expressed directly and concisely. The facilities added to C
to create C, such as function argument checking, const, classes, constructors and destructors,
exceptions, and templates, were primarily designed with this in mind. Thus, C is based on the
idea of providing both.
The purpose of a programming language is to help express ideas in code. In that, a programming
language performs two related tasks: it provides a vehicle for the programmer to specify actions to
be executed by the machine, and it provides a set of concepts for the programmer to use when
thinking about what can be done. The first purpose ideally requires a language that is close to the
machine’’ so that all important aspects of a machine are handled simply and efficiently in a way
that is reasonably obvious to the programmer. The C language was primarily designed with this in
mind. The second purpose ideally requires a language that is close to the problem to be solved
so that the concepts of a solution can be expressed directly and concisely. The facilities added to C
to create C, such as function argument checking, const, classes, constructors and destructors,
exceptions, and templates, were primarily designed with this in mind. Thus, C is based on the
idea of providing both.
